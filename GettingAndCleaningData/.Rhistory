colNames <- paste("V",sep="", featureLabels$Id)
dataSubSet <- select(dataSet,one_of(colNames))
#test <- mutate(dataSubSet,test=V1 * 5)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(dataSubSet)
activityVectorTrain <- read.table("./UCI HAR Dataset/train/y_train.txt",colClasses="character")
activityVectorTest <- read.table("./UCI HAR Dataset/test/y_test.txt",colClasses="character")
activityVectorTrain <- tbl_df(activityVectorTrain)
activityVectorTest <- tbl_df(activityVectorTest)
activityVector <- bind_rows(activityVectorTrain,activityVectorTest)
rm(activityVectorTrain)
rm(activityVectorTest)
dataSubSet <- bind_cols(activityVector,dataSubSet)
activityLabels <- read.table("./UCI HAR Dataset/activity_labels.txt",col.names=c("Id","ActivityName"), colClasses=c("numeric","character"))
View(dataSubSet)
test <- mutate(dataSubSet,test=V1 * 5)
test <- mutate(dataSubSet,test=5)
View(activityLabels)
View(activityVector)
rm(activityVector)
View(featureLabels)
View(featureLabels)
View(activityLabels)
View(featureLabels)
View(activityLabels)
View(dataSubSet)
dataSubSet <- mutate(dataSubSet,activty=NULL)
View(dataSubSet)
View(dataSubSet)
dataSubSet <- mutate(dataSubSet,activity=NULL)
View(dataSubSet)
test <- mutate(dataSubSet,activity=NULL)
View(test)
test <- mutate(dataSubSet,A=NULL)
test <- mutate(dataSubSet,A=1)
test <- mutate(dataSubSet,Activity=1
test <- mutate(dataSubSet,Activity=1)
test <- mutate(dataSubSet,Activity=1)
test <- mutate(dataSubSet,Activity=ifelse(V1==1,1,2))
View(test)
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1))
View(test)
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1))
test <- mutate(dataSubSet,Activity=ifelse(V1==2,"WALKING_UPSTAIRS",V1))
test <- mutate(dataSubSet,Activity=ifelse(V1==3,"WALKING_DOWNSTAIRS",V1))
test <- mutate(dataSubSet,Activity=ifelse(V1==4,"SITTING",V1))
test <- mutate(dataSubSet,Activity=ifelse(V1==5,"STANDING",V1))
test <- mutate(dataSubSet,Activity=ifelse(V1==6,"LAYING",V1))
View(test)
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1))
test <- mutate(dataSubSet,Activity=ifelse(V1==2,"WALKING_UPSTAIRS",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==3,"WALKING_DOWNSTAIRS",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==4,"SITTING",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==5,"STANDING",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==6,"LAYING",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1))
test <- mutate(dataSubSet,Activity=ifelse(V1==2,"WALKING_UPSTAIRS",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==3,"WALKING_DOWNSTAIRS",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==4,"SITTING",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==5,"STANDING",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1),ifelse(V1==2,"WALKING_UPSTAIRS",Activity))
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1),ifelse(V1==2,"WALKING_UPSTAIRS",Activity))
View(test)
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1,ifelse(V1==2,"WALKING_UPSTAIRS",Activity))
View(test)
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1)
test <- mutate(dataSubSet,Activity=if(V1==2,"WALKING_UPSTAIRS"))
View(test)
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1)
View(test)
View(test)
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1)
View(test)
test <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1))
View(test)
test <- mutate(dataSubSet,Activity=ifelse(V1==2,"WALKING_UPSTAIRS"),Activity)
test <- mutate(dataSubSet,Activity=ifelse(V1==2,"WALKING_UPSTAIRS",Activity))
dataSubSet <- mutate(dataSubSet,Activity=ifelse(V1==1,"WALKING",V1))
dataSubSet <- mutate(dataSubSet,Activity=ifelse(V1==2,"WALKING_UPSTAIRS",Activity))
dataSubSet <- mutate(dataSubSet,Activity=ifelse(V1==3,"WALKING_DOWNSTAIRS",Activity))
dataSubSet <- mutate(dataSubSet,Activity=ifelse(V1==4,"SITTING",Activity))
dataSubSet <- mutate(dataSubSet,Activity=ifelse(V1==5,"STANDING",Activity))
dataSubSet <- mutate(dataSubSet,Activity=ifelse(V1==6,"LAYING",Activity))
View(dataSubSet)
View(featureLabels)
featureLabels$FeatureName <- gsub("\\()-mean","mean",featureLabels$FeatureName)
featureLabels$FeatureName <- gsub("\\()-std",".std",featureLabels$FeatureName)
View(featureLabels)
View(featureLabels)
featureLabels$FeatureName <- gsub("\\()-mean","mean",featureLabels$FeatureName)
featureLabels$FeatureName <- gsub("\\()-std",".std",featureLabels$FeatureName)
featureLabels$FeatureName <- gsub("\\()\\-mean","mean",featureLabels$FeatureName)
featureLabels$FeatureName <- gsub("\\()\\-std",".std",featureLabels$FeatureName)
View(featureLabels)
featureLabels$FeatureName <- gsub("\\-mean\\()","mean",featureLabels$FeatureName)
featureLabels$FeatureName <- gsub("\\-std\\()",".std",featureLabels$FeatureName)
View(featureLabels)
featureLabels$FeatureName <- gsub("\\-mean\\()",".mean",featureLabels$FeatureName)
featureLabels$FeatureName <- gsub("\\-std\\()",".std",featureLabels$FeatureName)
View(featureLabels)
featureLabels$FeatureName <- gsub("\\-mean\\()",".mean",featureLabels$FeatureName)
View(featureLabels)
featureLabels$FeatureName <- gsub("\\-mean\\()",".mean",featureLabels$FeatureName)
View(featureLabels)
test <- dataSubSet[ ,-c(V1)]
test <- dataSubSet[ ,-1]
View(test)
dataSubSet <- dataSubSet[ ,-1]
cols <- c(featureLabels$FeatureName,"Activity")
test <- names(dataSubSet,cols)
?names
test <- names(dataSubSet) <- cols
View(dataSubSet)
# Step 5: 	From the data set in step 4, creates a second, independent
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(dataSubSet)
trainingSet <- read.table("./UCI HAR Dataset/train/subject_train.txt",colClasses="numeric")
testSet <- read.table("./UCI HAR Dataset/test/subject_test.txt",colClasses="numeric")
subjectSet <- bind_rows(trainingSet,testSet)
dataSubSet <- bind_cols(dataSubSet,subjectSet)
View(dataSubSet)
View(testSet)
View(trainingSet)
trainingSet <- read.table("./UCI HAR Dataset/train/subject_train.txt",colClasses="numeric",col.names="Subject")
testSet <- read.table("./UCI HAR Dataset/test/subject_test.txt",colClasses="numeric",col.names="Subject")
subjectSet <- bind_rows(trainingSet,testSet)
dataSubSet <- bind_cols(dataSubSet,subjectSet)
View(dataSubSet)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(dataSubSet)
dataSubSet <- group_by(Activity,Subject)
dataSubSet <- group_by(dataSubSet,Activity,Subject)
cleanSet <- summarise(dataSubSet,ave(dataSubSet))
cleanSet <- summarise(dataSubSet,mean(dataSubSet))
View(cleanSet)
cleanSet <- summarise_each(dataSubSet,mean(dataSubSet))
cleanSet <- summarise_each(dataSubSet,funs(mean))
View(cleanSet)
cleanSet <- cleanSet[order(Subject, Activity),]
View(cleanSet)
cleanSet <- cleanSet[order(cleanSet$Subject, cleanSet$Activity),]
View(cleanSet)
cleanSet <- summarise_each(dataSubSet,funs(mean))
cleanSet <- cleanSet[order(cleanSet$Activity, cleanSet$Subject),]
View(cleanSet)
trainingSet <- read.table("./UCI HAR Dataset/train/X_train.txt",
colClasses="numeric")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt",
colClasses="numeric")
# Convert to tbl to use dplyr
trainingSet %>% tbl_df()
testSet %>% tbl_df()
View(testSet)
dataSet <- bind_rows(trainingSet,testSet)
# Cleanup
rm(trainingSet)
rm(testSet)
activityVectorTrain <- read.table("./UCI HAR Dataset/train/y_train.txt",colClasses="character")
View(activityVectorTrain)
rm(activityVectorTrain)
featureLabels <- read.table("./UCI HAR Dataset/features.txt",col.names=c("Id","feature.name"), colClasses=c("numeric","character"))
View(featureLabels)
featureLabels <- read.table("./UCI HAR Dataset/features.txt",col.names=c("id","feature.name"), colClasses=c("numeric","character"))
View(featureLabels)
glimpse(dataSEt)
glimpse(dataSet)
std <- filter(featureLabels,grepl("std\\()\\b",FeatureName))
std <- filter(featureLabels,grepl("std\\()\\b",feature.name))
mean <- filter(featureLabels,grepl("mean\\()\\b",feature.name))
std <- tbl_df(std)
mean <- tbl_df(mean)
featureLabels <- bind_rows(std,mean)
colNames <- paste("V",sep="", featureLabels$Id)
dataSubSet <- select(dataSet,one_of(colNames))
View(dataSubSet)
colNames <- paste("V",sep="", featureLabels$id)
dataSubSet <- select(dataSet,one_of(colNames))
View(dataSubSet)
View(mean)
View(featureLabels)
featureLabels <- read.table("./UCI HAR Dataset/features.txt",col.names=c("id","feature.name"), colClasses=c("numeric","character"))
View(featureLabels)
std <- filter(featureLabels,grepl("std\\()",feature.name))
mean <- filter(featureLabels,grepl("mean\\()",feature.name))
View(mean)
std <- tbl_df(std)
mean <- tbl_df(mean)
featureLabels <- bind_rows(std,mean)
colNames <- paste("V",sep="", featureLabels$id)
dataSubSet <- select(dataSet,one_of(colNames))
View(dataSubSet)
View(dataSet)
# Read the training and test data sets (labels not read yet)
trainingSet <- read.table("./UCI HAR Dataset/train/X_train.txt",
colClasses="numeric")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt",
colClasses="numeric")
# Read the training and test labels, which correspond to activity names
trainingLabels <- read.table("./UCI HAR Dataset/train/y_train.txt",
col.names=c("label"),colClasses="character")
testLabels <- read.table("./UCI HAR Dataset/test/y_test.txt",
col.names=c("label"),colClasses="character")
# Convert to tbl to use dplyr
testSet <- tbl_df(testSet)
trainingSet <- tbl_df(trainingSet)
# Merge to form a single data set, row order (training, test)
trainingLabels <- tbl_df(trainingLabels)
labelledDataSet <- bind_cols(dataLabels,dataSet)
# Cleanup
rm(testSet)
rm(trainingLabels)
rm(dataSet)
rm(dataLabels)
dataSet <- bind_rows(trainingSet,testSet)
dataLabels <- bind_rows(trainingLabels,testLabels)
rm(trainingSet)
testLabels <- tbl_df(testLabels)
rm(testLabels)
trainingSet <- read.table("./UCI HAR Dataset/train/X_train.txt",
colClasses="numeric")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt",
colClasses="numeric")
# Read the training and test labels, which correspond to activity names
trainingLabels <- read.table("./UCI HAR Dataset/train/y_train.txt",
col.names=c("label"),colClasses="character")
testLabels <- read.table("./UCI HAR Dataset/test/y_test.txt",
col.names=c("label"),colClasses="character")
# Convert to tbl to use dplyr
trainingSet <- tbl_df(trainingSet)
testSet <- tbl_df(testSet)
trainingLabels <- tbl_df(trainingLabels)
testLabels <- tbl_df(testLabels)
trainingSet <- bind_cols(trainingLabels,trainingSet)
testSet <- bind_cols(testLabels,testSet)
View(trainingSet)
View(testSet)
dataSet <- bind_rows(trainingSet,testSet)
View(dataSet)
rm(trainingSet)
rm(testSet)
rm(trainingLabels)
rm(testLabels)
features <- read.table("./UCI HAR Dataset/features.txt",
col.names=c("id","feature.name"),
colClasses=c("numeric","character"))
std <- filter(features,grepl("std\\()",feature.name))
mean <- filter(features,grepl("mean\\()",feature.name))
?filter
?dplyr.filter
?dfilter
?filter
std <- filter(features,grepl("std\\()",feature.name),grepl("mean\\()",feature.name))
std <- filter(features,grepl("std\\()",feature.name)|grepl("mean\\()",feature.name))
stdOrMean <- filter(features,grepl("mean\\()",feature.name)|grepl("std\\()",feature.name))
stdOrMean <- tbl_df(stdOrMean)
View(stdOrMean)
features <- filter(features,
grepl("mean\\()",feature.name)
|grepl("std\\()",feature.name))
features <- tbl_df(features)
colNames <- paste("V",sep="",features$id)
View(dataSet)
dataSubSet <- select(dataSet,one_of("label",colNames))
View(dataSubSet)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(dataSet)
descriptiveLabels <- read.table("./UCI HAR Dataset/activity_labels.txt",
col.names=c("id.","activity.name"),
colClasses=c("numeric","character"))
View(descriptiveLabels)
descriptiveLabels <- read.table("./UCI HAR Dataset/activity_labels.txt",
col.names=c("id","activity.name"),
colClasses=c("numeric","character"))
View(descriptiveLabels)
dataSet <- mutate(dataSet,label=ifelse(V1==1,"WALKING",V1))
dataSet <- mutate(dataSet,label=ifelse(label==1,"WALKING",label))
View(dataSet)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(dataSet)
dataSet <- mutate(dataSet,label=ifelse(V1==2,"WALKING_UPSTAIRS",label))
dataSet <- mutate(dataSet,label=ifelse(V1==3,"WALKING_DOWNSTAIRS",label))
dataSet <- mutate(dataSet,label=ifelse(V1==4,"SITTING",label))
dataSet <- mutate(dataSet,label=ifelse(V1==5,"STANDING",label))
dataSet <- mutate(dataSet,label=ifelse(V1==6,"LAYING",label))
View(dataSet)
dataSet <- mutate(dataSet,label=ifelse(label==2,"WALKING_UPSTAIRS",label))
dataSet <- mutate(dataSet,label=ifelse(label==3,"WALKING_DOWNSTAIRS",label))
dataSet <- mutate(dataSet,label=ifelse(label==4,"SITTING",label))
dataSet <- mutate(dataSet,label=ifelse(label==5,"STANDING",label))
dataSet <- mutate(dataSet,label=ifelse(label==6,"LAYING",label))
View(dataSet)
View(descriptiveLabels)
features <- read.table("./UCI HAR Dataset/features.txt",
col.names=c("id","feature.name"),
colClasses=c("numeric","character"))
View(features)
features <- filter(features,
grepl("mean\\()",feature.name)
|grepl("std\\()",feature.name))
features <- tbl_df(features)
View(features)
features$feature.name <- gsub("\\-mean\\()-",".mean.",features$feature.name)
features$feature.name <- gsub("\\-mean\\()",".mean",features$feature.name)
features$feature.name <- gsub("\\-std\\()-",".std.",features$feature.name)
features$feature.name <- gsub("\\-std\\()",".std",features$feature.name)
View(features)
View(features)
cols <- c("label", features$feature.name)
names(dataSubSet) <- cols
View(dataSet)
names(dataSet) <- cols
View(dataSet)
testSet <- bind_cols(testLabels,testSet)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(descriptiveLabels)
View(dataSet)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(dataSet)
trainingSet <- read.table("./UCI HAR Dataset/train/X_train.txt",
colClasses="numeric")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt",
colClasses="numeric")
# Read the training and test labels, which correspond to activity names
trainingLabels <- read.table("./UCI HAR Dataset/train/y_train.txt",
col.names=c("label"),colClasses="character")
testLabels <- read.table("./UCI HAR Dataset/test/y_test.txt",
col.names=c("label"),colClasses="character")
# Read the training and test subject ids
trainingSubject <- read.table("./UCI HAR Dataset/train/subject_train.txt",
col.names="subject")
testSubject <- read.table("./UCI HAR Dataset/test/subject_test.txt",
colClasses="numeric",
colClasses="numeric",
testSubject <- read.table("./UCI HAR Dataset/test/subject_test.txt",
colClasses="numeric",
col.names="subject")
testSubject <- read.table("./UCI HAR Dataset/test/subject_test.txt",
colClasses="numeric",
col.names="subject")
trainingSubject <- read.table("./UCI HAR Dataset/train/subject_train.txt",
colClasses="numeric",
col.names=c("subject"))
testSubject <- read.table("./UCI HAR Dataset/test/subject_test.txt",
colClasses="numeric",
col.names=c("subject")
View(trainingSubject)
View(trainingSet)
trainingSet <- read.table("./UCI HAR Dataset/train/X_train.txt",
colClasses="numeric")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt",
colClasses="numeric")
# Read the training and test labels, which correspond to activity names
trainingLabels <- read.table("./UCI HAR Dataset/train/y_train.txt",
col.names=c("label"),
colClasses="character")
testLabels <- read.table("./UCI HAR Dataset/test/y_test.txt",
col.names=c("label"),
colClasses="character")
# Read the training and test subject ids
trainingSubject <- read.table("./UCI HAR Dataset/train/subject_train.txt",
colClasses="numeric"
)
testSubject <- read.table("./UCI HAR Dataset/test/subject_test.txt",
col.names=c("subject"),
col.names=c("subject"),
colClasses="numeric"
)
View(trainingSubject)
testSubject <- read.table("./UCI HAR Dataset/test/subject_test.txt",
col.names=c("subject"),
colClasses="numeric"
)
View(trainingSubject)
View(trainingSet)
View(testSubject)
View(trainingSubject)
trainingSubject <- read.table("./UCI HAR Dataset/train/subject_train.txt",
col.names=c("subject"),
colClasses="numeric"
)
View(trainingSubject)
trainingSet <- tbl_df(trainingSet)
testSet <- tbl_df(testSet)
trainingLabels <- tbl_df(trainingLabels)
testLabels <- tbl_df(testLabels)
trainingSubject <- tbl_df(trainingSubject)
testSubject <- tbl_df(testSubject)
# Merge to form a single data set, row order (training, test)
trainingLabels <- bind_cols(trainingLabels,trainingSubject)
trainingSet <- bind_cols(trainingLabels,trainingSet)
testLabels <- bind_cols(testLabels,testSubject)
testSet <- bind_cols(testLabels,testSet)
dataSet <- bind_rows(trainingSet,testSet)
View(dataSet)
rm(trainingSet)
rm(testSet)
rm(trainingLabels)
rm(testLabels)
rm(trainingSubject)
rm(testSubject)
##########################################################################
# Step 2: 	Extracts only the measurements on the mean and
#           standard deviation for each measurement.
##########################################################################
# Read the list of features, of format id, feature.name
features <- read.table("./UCI HAR Dataset/features.txt",
col.names=c("id","feature.name"),
colClasses=c("numeric","character"))
# Filter the features labelled mean() and std()
features <- filter(features,
grepl("mean\\()",feature.name)
|grepl("std\\()",feature.name))
features <- tbl_df(features)
colNames <- paste("V",sep="",features$id)
dataSet <- select(dataSet,one_of("label",colNames))
dataSet <- select(dataSet,one_of("label","subject",colNames))
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(dataSet)
dataSet <- group_by(dataSet,Activity,Subject)
cleanSet <- summarise_each(dataSet,funs(mean))
cleanSet <- cleanSet[order(cleanSet$Activity, cleanSet$Subject),]
dataSet <- group_by(dataSet,activity,subject)
dataSet <- group_by(dataSet,label,subject)
cleanSet <- summarise_each(dataSet,funs(mean))
cleanSet <- cleanSet[order(cleanSet$label, cleanSet$subject),]
View(dataSet)
View(cleanSet)
features$feature.name <- tolower(gsub("\\-mean\\()-",".mean.",features$feature.name))
View(features)
View(descriptiveLabels)
View(descriptiveLabels)
View(descriptiveLabels)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(cleanSet)
View(dataSet)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(dataSet)
trainingSet <- read.table("./UCI HAR Dataset/train/X_train.txt",
colClasses="numeric")
testSet <- read.table("./UCI HAR Dataset/test/X_test.txt",
colClasses="numeric")
# Read the training and test labels, which correspond to activity names
trainingLabels <- read.table("./UCI HAR Dataset/train/y_train.txt",
col.names=c("activity"),
colClasses="character")
testLabels <- read.table("./UCI HAR Dataset/test/y_test.txt",
colClasses="character")
col.names=c("activity"),
col.names=c("subject"),
)
col.names=c("subject"),
# Read the training and test subject ids
# Convert to tbl to use dplyr
testSet <- tbl_df(testSet)
testLabels <- tbl_df(testLabels)
trainingSubject <- read.table("./UCI HAR Dataset/train/subject_train.txt",
# Merge to form a single data set, row order (training, test)
trainingSet <- bind_cols(trainingLabels,trainingSet)
testLabels <- bind_cols(testLabels,testSubject)
dataSet <- bind_rows(trainingSet,testSet)
# Cleanup
rm(testSet)
)
rm(testLabels)
rm(trainingSubject)
rm(testSubject)
trainingLabels <- bind_cols(trainingLabels,trainingSubject)
testSet <- bind_cols(testLabels,testSet)
rm(trainingSet)
rm(trainingLabels)
trainingLabels <- tbl_df(trainingLabels)
testSubject <- tbl_df(testSubject)
testSubject <- read.table("./UCI HAR Dataset/test/subject_test.txt",
trainingSet <- tbl_df(trainingSet)
colClasses="numeric"
trainingSubject <- tbl_df(trainingSubject)
colClasses="numeric"
View(dataSet)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
dataSet %>% mutate(activity=ifelse(activity==1,names[1,"activity.name"],activity))
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(cleanSet)
View(dataSet)
View(cleanSet)
View(dataSet)
View(cleanSet)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(cleanSet)
View(dataSet)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
View(cleanSet)
View(dataSet)
?write.table
write.table(cleanSet,file="clean.txt",row.name=FALSE)
source('~/Desktop/CleaningDataOct15/GettingAndCleaningData/run_analysis.R')
write(colnames(cleanSet), "", sep = "\t")
write(colnames(cleanSet), "codebook.txt", sep = "\t")
write(colnames(cleanSet), "codebook.txt")
View(cleanSet)
features <- read.table("./UCI HAR Dataset/features.txt",
col.names=c("id","feature.name"),
colClasses=c("numeric","character"))
View(features)
# Filter the features labelled mean() and std()
features <- tbl_df(features)
features <- filter(features, grepl("mean\\()",feature.name)
|grepl("std\\()",feature.name))
View(features)
